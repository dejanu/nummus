#!/usr/bin/env bash

export GREP_COLORS='ms=01;32'
printf "\n Available namespaces are:\n $(kubectl get ns -o=custom-columns=NAMESPACES:.metadata.name) \n\t"
printf "\n Please write the name of the namespace\n\n"

# read nspace without any verification
#read -r nspace

# verify if the namespace provided as an argument exists
if [ -z "$1" ]; then
  echo "Please provide the namespace as the first argument"
  exit 1
else
    if ! kubectl get ns "$1" &> /dev/null; then
        echo "Namespace $1 does not exist"
        exit 1
    else
        nspace="$1"
    fi
fi

# list all pods from the selected namespace
printf "\n \e[0;32m Pods in ${nspace} namespace: \e[0m \n"

### POD LEVEL
printf "\n Please select a POD from namespace:\n $(kubectl -n "${nspace}" get po -o=custom-columns=POD:.metadata.name) \e[0m \n\n"
read -r ppod

## check Limits and Requests for Containers in Pod and current usage
printf "\n \e[0;32m Containers in POD:\e[0m"
kubectl -n "${nspace}" get po "${ppod}" -o jsonpath='{.spec.containers[*].name}'
printf "\n \e[0;32m Limits and Request per CONTAINER:\e[0m \n"
kubectl -n "${nspace}" get po "${ppod}" -o jsonpath='{.spec.containers[*].resources}'|jq .
printf "\n \e[0;32m Current resource usage:\e[0m \n"
kubectl -n "${nspace}" top po "${ppod}" --containers
